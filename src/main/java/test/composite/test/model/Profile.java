/*
 * transfer-service
 * api.description
 *
 * OpenAPI spec version: 1.0
 * Contact: api@demo.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package test.composite.test.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Date;
import test.composite.test.model.Account;
import test.composite.test.model.Frequency;
import test.composite.test.model.TransferType;
import javax.validation.constraints.*;

/**
 * Represents a Transfer Profile of the system
 */
@ApiModel(description = "Represents a Transfer Profile of the system")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2020-07-05T13:11:22.424Z")
public class Profile   {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("transfer_amount")
  private Double transferAmount = null;

  @JsonProperty("transfer_date")
  private Date transferDate = null;

  @JsonProperty("transfer_memo")
  private String transferMemo = null;

  @JsonProperty("transfer_type")
  private TransferType transferType = null;

  @JsonProperty("transfer_frequency")
  private Frequency transferFrequency = null;

  @JsonProperty("target_account")
  private Account targetAccount = null;

  @JsonProperty("source_account")
  private Account sourceAccount = null;

  public Profile id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   **/
  @JsonProperty("id")
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Profile transferAmount(Double transferAmount) {
    this.transferAmount = transferAmount;
    return this;
  }

  /**
   * The transfer amount
   * minimum: 0.01
   * @return transferAmount
   **/
  @JsonProperty("transfer_amount")
  @ApiModelProperty(required = true, value = "The transfer amount")
  @NotNull
 @DecimalMin("0.01")  public Double getTransferAmount() {
    return transferAmount;
  }

  public void setTransferAmount(Double transferAmount) {
    this.transferAmount = transferAmount;
  }

  public Profile transferDate(Date transferDate) {
    this.transferDate = transferDate;
    return this;
  }

  /**
   * The transfer date
   * @return transferDate
   **/
  @JsonProperty("transfer_date")
  @ApiModelProperty(required = true, value = "The transfer date")
  @NotNull
  public Date getTransferDate() {
    return transferDate;
  }

  public void setTransferDate(Date transferDate) {
    this.transferDate = transferDate;
  }

  public Profile transferMemo(String transferMemo) {
    this.transferMemo = transferMemo;
    return this;
  }

  /**
   * The transfer memo
   * @return transferMemo
   **/
  @JsonProperty("transfer_memo")
  @ApiModelProperty(value = "The transfer memo")
  public String getTransferMemo() {
    return transferMemo;
  }

  public void setTransferMemo(String transferMemo) {
    this.transferMemo = transferMemo;
  }

  public Profile transferType(TransferType transferType) {
    this.transferType = transferType;
    return this;
  }

  /**
   * The transfer type details
   * @return transferType
   **/
  @JsonProperty("transfer_type")
  @ApiModelProperty(required = true, value = "The transfer type details")
  @NotNull
  public TransferType getTransferType() {
    return transferType;
  }

  public void setTransferType(TransferType transferType) {
    this.transferType = transferType;
  }

  public Profile transferFrequency(Frequency transferFrequency) {
    this.transferFrequency = transferFrequency;
    return this;
  }

  /**
   * The transfer frequency details
   * @return transferFrequency
   **/
  @JsonProperty("transfer_frequency")
  @ApiModelProperty(required = true, value = "The transfer frequency details")
  @NotNull
  public Frequency getTransferFrequency() {
    return transferFrequency;
  }

  public void setTransferFrequency(Frequency transferFrequency) {
    this.transferFrequency = transferFrequency;
  }

  public Profile targetAccount(Account targetAccount) {
    this.targetAccount = targetAccount;
    return this;
  }

  /**
   * The transfer target account details
   * @return targetAccount
   **/
  @JsonProperty("target_account")
  @ApiModelProperty(required = true, value = "The transfer target account details")
  @NotNull
  public Account getTargetAccount() {
    return targetAccount;
  }

  public void setTargetAccount(Account targetAccount) {
    this.targetAccount = targetAccount;
  }

  public Profile sourceAccount(Account sourceAccount) {
    this.sourceAccount = sourceAccount;
    return this;
  }

  /**
   * The transfer source account details
   * @return sourceAccount
   **/
  @JsonProperty("source_account")
  @ApiModelProperty(required = true, value = "The transfer source account details")
  @NotNull
  public Account getSourceAccount() {
    return sourceAccount;
  }

  public void setSourceAccount(Account sourceAccount) {
    this.sourceAccount = sourceAccount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Profile profile = (Profile) o;
    return Objects.equals(this.id, profile.id) &&
        Objects.equals(this.transferAmount, profile.transferAmount) &&
        Objects.equals(this.transferDate, profile.transferDate) &&
        Objects.equals(this.transferMemo, profile.transferMemo) &&
        Objects.equals(this.transferType, profile.transferType) &&
        Objects.equals(this.transferFrequency, profile.transferFrequency) &&
        Objects.equals(this.targetAccount, profile.targetAccount) &&
        Objects.equals(this.sourceAccount, profile.sourceAccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, transferAmount, transferDate, transferMemo, transferType, transferFrequency, targetAccount, sourceAccount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Profile {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    transferAmount: ").append(toIndentedString(transferAmount)).append("\n");
    sb.append("    transferDate: ").append(toIndentedString(transferDate)).append("\n");
    sb.append("    transferMemo: ").append(toIndentedString(transferMemo)).append("\n");
    sb.append("    transferType: ").append(toIndentedString(transferType)).append("\n");
    sb.append("    transferFrequency: ").append(toIndentedString(transferFrequency)).append("\n");
    sb.append("    targetAccount: ").append(toIndentedString(targetAccount)).append("\n");
    sb.append("    sourceAccount: ").append(toIndentedString(sourceAccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

